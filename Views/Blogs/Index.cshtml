@using System.Security.Claims
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var reactionCounts = ViewData["ReactionCounts"] as Dictionary<int, (int, int)>;
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<style>
    .profile-image img {
        height: 100%;
    }

    .card-body {
        cursor: pointer;
    }

    /* Style the link as a block element to make the whole card body clickable */
    .card-link {
        display: block;
        color: inherit;
        text-decoration: none; /* Remove default underline */
    }

        .card-link:hover {
            color: inherit; /* Maintain default text color on hover */
        }

    /* Truncate text after three lines and add ellipsis */
    .truncate-3-lines {
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
    }

    /* Ensure the text doesn't wrap */
    .no-wrap {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .vote-icons {
        margin-bottom: 5px;
    }

        .vote-icons i {
            cursor: pointer;
            font-size: 35px;
            margin-left: 10px;
            color: grey;
        }
</style>


<div class="container">
    <h1 class="text-center mb-4">Welcome!</h1>


    <div class="text-center mb-3">
        <a class="btn btn-primary" asp-action="Create">Create New Post</a>
    </div>

    <p class="text-start mb-4">What we have today for you?</p>


    <!-- Filter dropdown -->
    <form asp-action="Index" method="get">
        <div class="form-group">
            <label for="filterOption">Filter:</label>
            <select name="filterOption" id="filterOption" class="form-control">
                <option value="popular" selected="@(ViewBag.FilterOption == "popular")">Popular Blogs</option>
                <option value="random" selected="@(ViewBag.FilterOption == "random")">Random</option>
                <option value="recency" selected="@(ViewBag.FilterOption == "recency")">Recency</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Apply Filter</button>
    </form>


    @* <div class="mb-3">
    <form asp-action="Index" method="get">
    <div class="form-group">
    <label for="filterOption">Filter:</label>
    <select name="filterOption" id="filterOption" class="form-control">
    <option value="popular" selected="@(ViewBag.FilterOption == "popular")">Popular Blogs</option>
    <option value="random" selected="@(ViewBag.FilterOption == "random")">Random</option>
    <option value="recency" selected="@(ViewBag.FilterOption == "recency")">Recency</option>
    </div>
    <button type="submit" class="btn btn-primary">Apply Filter</button>
    </form>
    </div> *@


    <div class="row">
        @foreach (var item in Model)
        {
            var upvotes = 0;
            var downvotes = 0;
            var userReaction = 0;
            if (reactionCounts != null && reactionCounts.ContainsKey(item.BlogID))
            {
                upvotes = reactionCounts[item.BlogID].Item1;
                downvotes = reactionCounts[item.BlogID].Item2;
            }

            if (ViewBag.BlogReactions != null)
            {
                var userCommentReaction = ((List<Reaction>)ViewBag.BlogReactions)
                    .FirstOrDefault(r => r.BlogID == item.BlogID)?.ReactionTypeID;

                if (userCommentReaction.HasValue)
                {
                    userReaction = userCommentReaction.Value;
                }
            }

            <div class="card mb-3">
                <div class="card-body " onclick="window.location.href='@Url.Action("Details", "Blogs", new { id = item.BlogID })';">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="mb-3">
                                <h3>@item.Title</h3>
                                <p class="text-muted truncate-3-lines">by @item.User.UserName <span id="blogger"></span></p>
                                <p class="truncate-3-lines">@item.Body</p>
                            </div>
                            <p class="text-muted no-wrap">Posted on: @item.CreatedDate.ToShortDateString()</p>
                            <form asp-controller="Reactions" asp-action="CreateVoteReaction" method="post">
                                <input type="hidden" name="BlogID" value="@item.BlogID"/>
                                <input type="hidden" name="UserID" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)"/>

                                <div class="vote-icons">
                                    <button type="submit" class="btn btn-link" name="ReactionTypeID" value="1">
                                        <i class="fa-solid fa-circle-arrow-up @(userReaction == 1 ? "text-primary" : "")"></i>
                                        <span>@upvotes</span> <!-- Use the actual upvote count -->
                                    </button>
                                    <button type="submit" class="btn btn-link" name="ReactionTypeID" value="2">
                                        <i class="fa-solid fa-circle-arrow-down @(userReaction == 2 ? "text-danger" : "")"></i>
                                        <span>@downvotes</span> <!-- Use the actual downvote count -->
                                    </button>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3 profile-image">
                                @if (item.BlogPicture != null && item.BlogPicture.Length > 0)
                                {
                                    <img src="data:image/png;base64,@Convert.ToBase64String(item.BlogPicture)" style="width:300px; height:300px"/>
                                }
                                else
                                {
                                    <p>No profile picture available</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @for (var i = 1; i <= ViewBag.PageCount; i++)
            {
                <li class="page-item @(ViewBag.PageNumber == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }
        </ul>
    </nav>

</div>